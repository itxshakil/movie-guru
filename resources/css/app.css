@import 'tailwindcss';

@plugin '@tailwindcss/forms';
@plugin '@tailwindcss/aspect-ratio';

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';

@theme {
    --font-sans: Figtree, ui-sans-serif, system-ui, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

    --color-primary-50: #eaf3ff;
    --color-primary-100: #d8e9ff;
    --color-primary-200: #b9d5ff;
    --color-primary-300: #8fb7ff;
    --color-primary-400: #628dff;
    --color-primary-500: #3e63ff;
    --color-primary-600: #1d34ff;
    --color-primary-700: #192cf0;
    --color-primary-800: #1224c1;
    --color-primary-900: #192996;
    --color-primary-950: #0f1757;

    --color-secondary-50: #f6f8f9;
    --color-secondary-100: #ebf0f3;
    --color-secondary-200: #d3dee4;
    --color-secondary-300: #9cb7c3;
    --color-secondary-400: #7fa3b1;
    --color-secondary-500: #5f8798;
    --color-secondary-600: #4b6e7e;
    --color-secondary-700: #3e5966;
    --color-secondary-800: #364b56;
    --color-secondary-900: #30404a;

    --color-ternary-50: #f8f8f8;
    --color-ternary-100: #f1f0ef;
    --color-ternary-200: #e7e5e3;
    --color-ternary-300: #d4d1cd;
    --color-ternary-400: #bab5af;
    --color-ternary-500: #a09a93;
    --color-ternary-600: #88817a;
    --color-ternary-700: #716b64;
    --color-ternary-800: #5f5a55;
    --color-ternary-900: #524e4a;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }
}

h1, h2, h3{
    @apply text-balance;
}

html:has([open]){
    @apply overflow-hidden;
}

img {
    @apply text-gray-800;
    @apply dark:text-gray-200;
    @apply max-w-full;
    @apply h-auto;
    @apply align-middle;
    @apply italic;
    @apply bg-no-repeat;
    @apply bg-cover;
}

body {
    -webkit-touch-callout: none;
}


/*   Open state of the dialog  */
dialog[open] {
    opacity: 1;
    transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
    opacity: 0;
    transform: scaleY(0);
    transition: opacity 0.7s ease-out,
    transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete,
    display 0.7s ease-out allow-discrete;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
    dialog[open] {
        opacity: 0;
        transform: scaleY(0);
    }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition: display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
    dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0%);
    }
}

@media all and (display-mode: fullscreen) {
    .install-prompt-container {
        display: none;
    }
}

